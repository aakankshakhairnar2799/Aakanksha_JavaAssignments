001_Aakanksha Khairnar
Assignment day 6
Q.Inheritance 1
package day6;
interface MouseHandler
{
	void mouseClicked();
	void mousePressed();
	void mouseReleased();
}
interface WindowHandler
{
	void windowClosing();
	void windowClosed();
}

class WindowGUIApp implements MouseHandler,WindowHandler
{
	public void mouseClicked() {
		System.out.println("mouseClicked");
	}
	public void mousePressed() {
		System.out.println("mousePressed");
	}
	public void mouseReleased() {
		System.out.println("mouseReleased");
	}
	public void windowClosing() {
		System.out.println("windowClosing");
	}
	public void windowClosed() {
		System.out.println("windowClosed");
	}
}

public class GUIDemo
{
	public static void main(String args[])
	{
		WindowGUIApp w=new WindowGUIApp();
		w.mouseClicked();
		w.mousePressed();
		w.mouseReleased();
		w.windowClosing();
		w.windowClosed();
	}
}


Q.Inheritance 2
Devloper Code:

package devloperpack;
public interface Shape {
	
	public void draw();
}

package devpack;

public class Circle implements Shape {

	public void draw() {
		System.out.println("Circle Draw");
	}
}

package devloperpack;

public class Rect implements Shape{
	
	public void draw() {
		System.out.println("Rectanlge Draw");
	}
}


package devloperpack;
public class Triangle implements Shape{
	public void draw() {
		System.out.println("Triangle Draw");
	}
}


Client Code:
package clientpack;
import devloperpack.*;

public class ShapeDemo {

	public static void main(String[] args) {
		Shape arr[]=new Shape[3];
		arr[0]=new Circle();
		arr[1]=new Rect();
		arr[2]=new Triangle();
		
		for (int i=0;i<arr.length;i++) {
			arr[i].draw();
		}
	}

}


Q.Inheritance 2
Devloper Code:

package devpack;

public interface PersistenceMechanism {
	
	public void writeData(String ref);

	public String readData();
}

Client Code:

package ClientPack;
import devloperpack.*;
public class FileSystem implements PersistenceMechanism{
	String s;
	public void writeData(String ref)
	{
		this.s=ref;
	}
	public String readData()
	{
		return s;
	}
}



package ClientPack;
import devloperpack.*;
public class DatabaseSystem implements PersistenceMechanism {
	String s;
	public void writeData(String ref)
	{
		this.s=ref;
	}
	public String readData()
	{
		return s;
	}
}


package ClientPack;
import devloperpack.*;

public class BigdataSystem implements PersistenceMechanism{
	String s;
	public void writeData(String ref)
	{
		this.s=ref;
	}
	public String readData()
	{
		return s;
	}
}



package ClientPack;
import devloperpack.*;

public class Demo {
	public static void main(String[] args) {
		PersistenceMechanism arr[]=new PersistenceMechanism[3];
		arr[0]=new FileSystem();
		arr[1]=new DatabaseSystem();
		arr[2]=new BigdataSystem();
		
		for(int i=0;i<arr.length;i++) {
			if(arr[i] instanceof BigdataSystem) {
				arr[i].writeData("reading data from Bigdata");
				System.out.print(arr[i].readData());
			}
		}
	}

}
